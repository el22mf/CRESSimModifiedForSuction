//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Crtk
{
    [Serializable]
    public class CartesianImpedanceHalfPlaneGainsMsg : Message
    {
        public const string k_RosMessageName = "crtk_msgs/CartesianImpedanceHalfPlaneGains";
        public override string RosMessageName => k_RosMessageName;

        public Geometry.Vector3Msg p;
        public Geometry.Vector3Msg d;
        public Geometry.Vector3Msg bias;
        public Geometry.Vector3Msg deadband;

        public CartesianImpedanceHalfPlaneGainsMsg()
        {
            this.p = new Geometry.Vector3Msg();
            this.d = new Geometry.Vector3Msg();
            this.bias = new Geometry.Vector3Msg();
            this.deadband = new Geometry.Vector3Msg();
        }

        public CartesianImpedanceHalfPlaneGainsMsg(Geometry.Vector3Msg p, Geometry.Vector3Msg d, Geometry.Vector3Msg bias, Geometry.Vector3Msg deadband)
        {
            this.p = p;
            this.d = d;
            this.bias = bias;
            this.deadband = deadband;
        }

        public static CartesianImpedanceHalfPlaneGainsMsg Deserialize(MessageDeserializer deserializer) => new CartesianImpedanceHalfPlaneGainsMsg(deserializer);

        private CartesianImpedanceHalfPlaneGainsMsg(MessageDeserializer deserializer)
        {
            this.p = Geometry.Vector3Msg.Deserialize(deserializer);
            this.d = Geometry.Vector3Msg.Deserialize(deserializer);
            this.bias = Geometry.Vector3Msg.Deserialize(deserializer);
            this.deadband = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.p);
            serializer.Write(this.d);
            serializer.Write(this.bias);
            serializer.Write(this.deadband);
        }

        public override string ToString()
        {
            return "CartesianImpedanceHalfPlaneGainsMsg: " +
            "\np: " + p.ToString() +
            "\nd: " + d.ToString() +
            "\nbias: " + bias.ToString() +
            "\ndeadband: " + deadband.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
