//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Crtk
{
    [Serializable]
    public class OperatingStateMsg : Message
    {
        public const string k_RosMessageName = "crtk_msgs/OperatingState";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  See https://github.com/collaborative-robotics/documentation/wiki/Robot-API-status
        // 
        //  Standard states include DISABLED, ENABLED, PAUSED and FAULT
        // 
        public Std.HeaderMsg header;
        public string state;
        public bool is_homed;
        public bool is_busy;

        public OperatingStateMsg()
        {
            this.header = new Std.HeaderMsg();
            this.state = "";
            this.is_homed = false;
            this.is_busy = false;
        }

        public OperatingStateMsg(Std.HeaderMsg header, string state, bool is_homed, bool is_busy)
        {
            this.header = header;
            this.state = state;
            this.is_homed = is_homed;
            this.is_busy = is_busy;
        }

        public static OperatingStateMsg Deserialize(MessageDeserializer deserializer) => new OperatingStateMsg(deserializer);

        private OperatingStateMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.state);
            deserializer.Read(out this.is_homed);
            deserializer.Read(out this.is_busy);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.state);
            serializer.Write(this.is_homed);
            serializer.Write(this.is_busy);
        }

        public override string ToString()
        {
            return "OperatingStateMsg: " +
            "\nheader: " + header.ToString() +
            "\nstate: " + state.ToString() +
            "\nis_homed: " + is_homed.ToString() +
            "\nis_busy: " + is_busy.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
